<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="3" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-08-03T20:25:56 IST" name="Suite" finished-at="2022-08-03T20:28:23 IST" duration-ms="147278">
    <groups>
    </groups>
    <test started-at="2022-08-03T20:25:56 IST" name="Registration Test Case" finished-at="2022-08-03T20:27:54 IST" duration-ms="118363">
      <class name="Academy.registration">
        <test-method is-config="true" signature="intialisation()[pri:0, instance:Academy.registration@7393222f]" started-at="2022-08-03T20:25:56 IST" name="intialisation" finished-at="2022-08-03T20:26:30 IST" duration-ms="34364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intialisation -->
        <test-method signature="registration(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Academy.registration@7393222f]" started-at="2022-08-03T20:26:30 IST" name="registration" data-provider="getData" finished-at="2022-08-03T20:27:05 IST" duration-ms="35212" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jitendra]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[jtn3200@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Jay323200#]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Rahul Shetty Academy] but found [RahulShetty]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Rahul Shetty Academy] but found [RahulShetty]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at Academy.registration.registration(registration.java:45)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registration -->
        <test-method signature="registration(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Academy.registration@7393222f]" started-at="2022-08-03T20:27:09 IST" name="registration" data-provider="getData" finished-at="2022-08-03T20:27:25 IST" duration-ms="16288" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Apurva]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apu@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Jay323200#]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Rahul Shetty Academy] but found [RahulShetty]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Rahul Shetty Academy] but found [RahulShetty]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at Academy.registration.registration(registration.java:45)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registration -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:Academy.registration@7393222f]" started-at="2022-08-03T20:27:43 IST" name="afterTest" finished-at="2022-08-03T20:27:54 IST" duration-ms="11012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Academy.registration -->
    </test> <!-- Registration Test Case -->
    <test started-at="2022-08-03T20:25:56 IST" name="Login Test Case" finished-at="2022-08-03T20:28:23 IST" duration-ms="147278">
      <class name="Academy.login">
        <test-method signature="login()[pri:1, instance:Academy.login@56673b2c]" started-at="2022-08-03T20:25:56 IST" name="login" finished-at="2022-08-03T20:27:11 IST" duration-ms="74984" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="practice()[pri:2, instance:Academy.login@56673b2c]" started-at="2022-08-03T20:27:11 IST" name="practice" finished-at="2022-08-03T20:27:58 IST" duration-ms="46667" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- practice -->
        <test-method signature="autoPractice()[pri:3, instance:Academy.login@56673b2c]" started-at="2022-08-03T20:27:58 IST" name="autoPractice" finished-at="2022-08-03T20:28:23 IST" duration-ms="25537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- autoPractice -->
      </class> <!-- Academy.login -->
    </test> <!-- Login Test Case -->
  </suite> <!-- Suite -->
</testng-results>
